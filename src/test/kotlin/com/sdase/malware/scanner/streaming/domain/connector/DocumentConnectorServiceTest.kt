package com.sdase.malware.scanner.streaming.domain.connector

import io.mockk.every
import io.mockk.mockk
import io.mockk.verify
import org.assertj.core.api.Assertions.assertThat
import org.junit.jupiter.api.Test
import org.springframework.core.io.ClassPathResource
import org.springframework.core.io.InputStreamResource
import org.springframework.core.io.Resource
import org.springframework.core.io.ResourceLoader
import org.springframework.util.FileCopyUtils
import org.springframework.util.ResourceUtils
import org.springframework.web.reactive.function.client.WebClient
import reactor.core.publisher.Flux
import reactor.core.publisher.Mono

class DocumentConnectorServiceTest {

    private val webClient = mockk<WebClient>()

    private val documentConnectorService = DocumentConnectorService(webClient)

    @Test
    fun `it should retrive a document`() {
        val uri = "http://localhost:8080/docs/1234.pdf"
        every { webClient.get().uri(uri).retrieve().bodyToFlux(Resource::class.java)} returns Flux.just(ClassPathResource("Testdaten_Rechnungseinreichung.pdf"))

        val document = documentConnectorService.getDocument(uri)

        verify { webClient.get() }
        assertThat(document).isNotNull
        assertThat(document.file.isFile).isTrue()
    }
}